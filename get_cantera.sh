#!/usr/bin/env bash

DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd)"


function gen_makeinc()
{
  makefile_in="${DIR}/CanteraPFR/Makefile.in"

  echo "********************************************************************"
  echo "Creating ${makefile_in}"
  echo "# File generated by get_cantera.sh." > ${makefile_in}
  echo "EXTERNAL := $1" >> ${makefile_in}
  echo "OPTIONS  := $2" >> ${makefile_in}

  echo "********************************************************************"
  echo "Appending ~/.bashrc"
  echo ${LD_LIBRARY_PATH} | grep -q "$1"
  if [[ "$?" != "0" ]]; then
    echo "export LD_LIBRARY_PATH=\"$1/lib:\${LD_LIBRARY_PATH}\"" >> ~/.bashrc
  else
    echo "Already in LD_LIBRARY_PATH: $1"
  fi

}


function header()
{
  echo "********************************************************************"
  echo "Running from $1"
  echo "Installing to $2"
}


function get_sundials()
{
  echo "********************************************************************"
  echo "Trying to retrieve Sundials"
  sundials_version="2.7.0"
  sundials_file="sundials-${sundials_version}.tar.gz"
  wget https://computation.llnl.gov/projects/sundials/download/${sundials_file}
  tar xzf ${sundials_file}
  mkdir sundials

  cd sundials

  blas=$(ldconfig -p | grep openblas | tail -1 | awk '{ print $4 }')

  cmake \
      -DCMAKE_INSTALL_PREFIX="$1" \
      -DLAPACK_ENABLE="ON" \
      -DLAPACK_LIBRARIES="${blas}" \
      -DCMAKE_C_FLAGS="-fPIC -O3" \
      "../sundials-${sundials_version}"

      # FOR 3.1.0 IN THE FUTURE!
      # cmake \
      #     -DCMAKE_INSTALL_PREFIX="$1" \
      #     -DSUNDIALS_INDEX_TYPE="int32_t" \
      #     -DBLAS_ENABLE="ON" \
      #     -DLAPACK_ENABLE="ON" \
      #     -DBLAS_LIBRARIES="${blas}" \
      #     -DLAPACK_LIBRARIES="${blas}" \
      #     -DCMAKE_C_FLAGS="-fPIC -O3" \
      #     "../sundials-${sundials_version}"

  make install
  cd ..

}


function build_cantera()
{
  uname_out="$(uname -s)"

  echo "********************************************************************"
  echo "Starting build"

  case "${uname_out}" in
      Linux*|Darwin*)
          machine_os=Nix
          prefix="${DIR}/external/${machine_os}"
          cxx_flags="-g -O3 -std=c++11"

          header "${machine_os}" "${prefix}"
          gen_makeinc "${prefix}" "${cxx_flags}"
          get_sundials "${prefix}"

          scons build \
              prefix=${prefix} \
              python_package="none" \
              python3_package="full" \
              f90_interface="y" \
              googletest="submodule" \
              system_eigen="n" \
              system_fmt="n" \
              system_sundials="y" \
              sundials_include="${prefix}/include" \
              sundials_libdir="${prefix}/lib" \
              blas_lapack_libs="openblas" \
              cxx_flags="${cxx_flags}";
          ;;
      CYGWIN*|MINGW*)
          machine_os=Win
          prefix="${DIR}/external/${machine_os}"
          cxx_flags="-g -O3 -std=c++11 -U__STRICT_ANSI__"

          header "${machine_os}" "${prefix}"
          gen_makeinc "${prefix}" "${cxx_flags}"

          scons build \
              prefix=${prefix} \
              python_package="none" \
              f90_interface="n" \
              system_eigen="n" \
              system_fmt="n" \
              system_googletest="n" \
              system_sundials="n" \
              cxx_flags="${cxx_flags}";
              # FIXME path to blas_lapack_libs="openblas" \
          ;;
      *)
          echo "Unsupported system: ${uname_out}"
          exit -1
  esac

  scons test
  scons install
}


function get_cantera()
{
  echo "********************************************************************"
  echo "Trying to retrieve Cantera"
  git clone --recursive https://github.com/Cantera/cantera.git
  cd cantera
  git checkout tags/v2.4.0
  git submodule update

  build_cantera

  echo "Now run 'source ~/.bashrc' to refresh environment"
}


get_cantera
